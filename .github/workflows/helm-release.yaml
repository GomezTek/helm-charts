name: Release Helm Chart

on:
  push:
    branches:
      - main
      - 'release/*'
    paths:
      - 'gtk-mesa-chart/**'
      - '.github/workflows/helm-release.yaml'
  workflow_dispatch:

env:
  CHART_DIR: gtk-mesa-chart
  REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  chart-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.16.2

      - name: Add Helm repos
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update

      - name: Build dependencies
        run: |
          cd ${{ env.CHART_DIR }}
          helm dependency build

      - name: Run helm lint
        run: |
          helm lint ${{ env.CHART_DIR }}

      - name: Run helm template
        run: |
          helm template test ${{ env.CHART_DIR }}

  debug-info:
    needs: chart-test
    runs-on: ubuntu-latest
    steps:
      - name: Debug Info
        run: |
          echo "Branch ref: ${{ github.ref }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"

  release:
    needs: [chart-test, debug-info]
    runs-on: ubuntu-latest
    if: ${{ success() }}
    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Yq
        run: |
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Add Helm repos
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update

      - name: Set Chart Version
        id: set_version
        run: |
          # Get base version from Chart.yaml
          CHART_VERSION=$(yq eval '.version' ${{ env.CHART_DIR }}/Chart.yaml)
          
          if [[ "${{ github.ref }}" == refs/heads/release/* ]]; then
            # For release branches, append commit SHA
            SHA=$(git rev-parse --short HEAD)
            NEW_VERSION="${CHART_VERSION}-${SHA}"
          else
            # For main branch, use version as is
            NEW_VERSION="${CHART_VERSION}"
          fi
          
          echo "Setting version to: ${NEW_VERSION}"
          yq eval -i '.version = "'${NEW_VERSION}'"' ${{ env.CHART_DIR }}/Chart.yaml
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT

      - name: Build and Push Chart
        env:
          HELM_EXPERIMENTAL_OCI: 1
        run: |
          VERSION=${{ steps.set_version.outputs.version }}
          CHART_NAME=mesa
          # Convert repository owner to lowercase for GHCR
          REPO_OWNER=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          
          echo "Building dependencies..."
          helm dependency build ${{ env.CHART_DIR }}
          
          echo "Logging into GHCR..."
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin
          
          echo "Packaging and pushing chart ${CHART_NAME}:${VERSION}..."
          helm package ${{ env.CHART_DIR }}
          helm push mesa-${VERSION}.tgz oci://ghcr.io/${REPO_OWNER}/charts
          
          echo "Successfully pushed chart to GHCR"