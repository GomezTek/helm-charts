---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mesa.resourceName" (dict "suffix" "mysql" "root" .) }}
  labels:
    {{- include "mesa.labels" . | nindent 4 }}
    component: database
  annotations:
    {{- include "mesa.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.mysql.replicaCount | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  serviceName: database-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        io.kompose.network/backend: "true"
        {{- include "mesa.labels" . | nindent 8 }}
      annotations:
        {{- include "mesa.annotations" . | nindent 8 }}
    spec:
      nodeSelector:
        {{- toYaml .Values.mysql.nodeSelector | nindent 8 }}
      containers:
      - name: database
        image: {{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}
        imagePullPolicy: {{ .Values.mysql.image.pullPolicy }}
        args:
        {{- range .Values.mysql.args }}
        - {{ . | quote }}
        {{- end }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: password
        - name: TZ
          value: {{ .Values.mysql.timezone | quote }}
        resources:
          {{- toYaml .Values.mysql.resources | nindent 10 }}
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql/data
        - name: config-map-custom
          mountPath: /etc/mysql/conf.d
      restartPolicy: Always
      serviceAccountName: sa-mysql
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: db-pvc
      - name: config-map-custom
        configMap:
          name: {{ include "mesa.resourceName" (dict "suffix" "mysql-config" "root" .) }}
          items:
          - key: custom.cnf
            path: custom.cnf